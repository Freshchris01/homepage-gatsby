{"version":3,"file":"component---src-pages-components-menu-tsx-5855af65146aa4e74496.js","mappings":"uGAGAA,EAAAA,OAAqB,EAQrB,IAsBIC,EAtBW,SAAkBC,EAAUC,QACnB,IAAlBA,IACFA,EAAgB,SAGlB,IAAIC,EAAUC,SAASC,cAAcJ,GAErC,QAAIE,IACFA,EAAQG,eAAe,CACrBC,SAAU,SACVC,MAAON,KAEF,EAQX,EAGAH,EAAAA,EAAqBC,C,sDC9BrB,MAAMS,EAAY,CACjB,CACCC,MAAO,OACPC,KAAM,SAEP,CACCD,MAAO,YACPC,KAAM,cACJ,CACFD,MAAO,aACPC,KAAM,eACJ,CACFD,MAAO,SACPC,KAAM,WACJ,CACFD,MAAO,WACPC,KAAM,aACJ,CACFD,MAAO,UACPC,KAAM,YACJ,CACFD,MAAO,KACPC,KAAM,OAEP,CACCD,MAAO,aACPC,KAAM,gBAGFC,EAAOC,EAAAA,YAAiB,CAACC,EAAOC,KACrC,MAAM,EAACC,EAAI,EAAEC,IAAWC,EAAAA,EAAAA,WAAS,GAG3BC,IAFUC,EAAAA,EAAAA,UAEF,KACbH,GAAQ,EAAM,GAGTI,EAAW,KAChBJ,GAAQ,EAAK,EAOd,OAJAK,EAAAA,EAAAA,qBAAoBP,GAAK,KAAM,CAC9BC,KAAMK,MAINR,EAAAA,cAAAA,MAAAA,CACCU,KAAK,SACLC,SAAU,EACVC,UAAS,OACTC,QAASP,EACTQ,UAAWR,EACXS,MAAO,CAAEC,WAAYb,EAAO,UAAY,SAAUc,QAASd,EAAO,EAAI,IAErEP,EAAUsB,KAAI,CAACC,EAAMC,IAEpBpB,EAAAA,cAAAA,MAAAA,CAAKY,UAAU,2DAA2DS,IAAKD,GAC9EpB,EAAAA,cAAAA,MAAAA,CAAKY,UAAU,GAAGC,QAAS,KAAMS,EAAAA,EAAAA,GAASH,EAAKrB,OAAQ,IAAEqB,EAAKtB,UAI5D,IAIR,W","sources":["webpack://homepage/./node_modules/gatsby-plugin-smoothscroll/index.js","webpack://homepage/./src/pages/components/Menu.tsx"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\n/**\n * Smooth scrolling onClick event handler\n * @param {string} selector argument will be passed to `querySelector`, usually an HTML id\n * @param {string} [blockPosition='start'] argument will be used to determine position where will be scrolled to (start, center, end, nearest)\n * @returns {boolean} false if `document.querySelector` doesn't find a match, otherwise true\n */\nvar scrollTo = function scrollTo(selector, blockPosition) {\n  if (blockPosition === void 0) {\n    blockPosition = 'start';\n  }\n\n  var element = document.querySelector(selector);\n\n  if (element) {\n    element.scrollIntoView({\n      behavior: 'smooth',\n      block: blockPosition\n    });\n    return true;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\"gatsby-plugin-smoothscroll:\\n The selector: '%s' wasn't found in the document.\\n Make sure you pass in a valid CSS selector string.\", selector);\n  }\n\n  return false;\n};\n\nvar _default = scrollTo;\nexports[\"default\"] = _default;","import React, { useImperativeHandle, useRef, useState } from \"react\"\nimport scrollTo from 'gatsby-plugin-smoothscroll';\nimport { Link } from \"gatsby\"\n\nconst menuItems = [\n\t{\n\t\ttitle: \"Home\",\n\t\tlink: \"#home\"\n\t},\n\t{\n\t\ttitle: \"Education\",\n\t\tlink: \"#education\",\n\t}, {\n\t\ttitle: \"Experience\",\n\t\tlink: \"#experience\",\n\t}, {\n\t\ttitle: \"Skills\",\n\t\tlink: \"#skills\",\n\t}, {\n\t\ttitle: \"Projects\",\n\t\tlink: \"#projects\",\n\t}, {\n\t\ttitle: \"Contact\",\n\t\tlink: \"#contact\",\n\t}, {\n\t\ttitle: \"CV\",\n\t\tlink: \"#cv\",\n\t},\n\t{\n\t\ttitle: \"References\",\n\t\tlink: \"#references\"\n\t}]\n\nconst Menu = React.forwardRef((props, ref) => {\n\tconst [open, setOpen] = useState(true);\n\tconst menuRef = useRef();\n\n\tconst close = () => {\n\t\tsetOpen(false);\n\t};\n\n\tconst openMenu = () => {\n\t\tsetOpen(true);\n\t};\n\n\tuseImperativeHandle(ref, () => ({\n\t\topen: openMenu,\n\t}));\n\n\treturn (\n\t\t<div\n\t\t\trole=\"button\"\n\t\t\ttabIndex={0}\n\t\t\tclassName={`menu`}\n\t\t\tonClick={close}\n\t\t\tonKeyDown={close}\n\t\t\tstyle={{ visibility: open ? 'visible' : 'hidden', opacity: open ? 1 : 0 }}\n\t\t>\n\t\t\t{menuItems.map((item, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className='border rounded-lg bg-primary mx-2 p-2 m-2 cursor-pointer' key={index}>\n\t\t\t\t\t\t<div className='' onClick={() => scrollTo(item.link)} > {item.title}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t);\n});\n\nexport default Menu;"],"names":["exports","_default","selector","blockPosition","element","document","querySelector","scrollIntoView","behavior","block","menuItems","title","link","Menu","React","props","ref","open","setOpen","useState","close","useRef","openMenu","useImperativeHandle","role","tabIndex","className","onClick","onKeyDown","style","visibility","opacity","map","item","index","key","scrollTo"],"sourceRoot":""}